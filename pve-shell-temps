#!/bin/bash
set -e

echo "=== Installing required packages ==="
apt update
apt install -y lm-sensors ipmitool dmidecode

echo "=== Creating cputemp.sh ==="
cat >/usr/local/bin/cputemp.sh <<'EOF'
#!/bin/bash
echo -e "\n=== CPU Temps ==="
echo "-- CPU1 --"
sensors | grep -E "Core [0-9]:" | head -n 4
echo "-- CPU2 --"
sensors | grep -E "Core [0-9]:" | tail -n 4
EOF
chmod +x /usr/local/bin/cputemp.sh

echo "=== Creating memtemp.sh ==="
cat >/usr/local/bin/memtemp.sh <<'EOF'
#!/bin/bash
sensors | awk '
  BEGIN {
    IGNORECASE=1
    map["jc42-i2c-0-18"]="CPU1 DIMM A1"
    map["jc42-i2c-0-19"]="CPU1 DIMM A2"
    map["jc42-i2c-0-1a"]="CPU1 DIMM B1"
    map["jc42-i2c-0-1b"]="CPU2 DIMM A1"
    map["jc42-i2c-0-1c"]="CPU2 DIMM A2"
    map["jc42-i2c-0-1d"]="CPU2 DIMM B1"
    order[1]="jc42-i2c-0-18"
    order[2]="jc42-i2c-0-19"
    order[3]="jc42-i2c-0-1a"
    order[4]="jc42-i2c-0-1b"
    order[5]="jc42-i2c-0-1c"
    order[6]="jc42-i2c-0-1d"
  }
  {
    if ($1 in map) {
      key=$1
      getline; getline
      temp=$2
      gsub(/\+|°C/,"",temp)
      temps[key]=temp
    }
  }
  END {
    print "=== DIMM Temps ==="
    print "CPU1:"
    for (i=1; i<=3; i++) printf "  %-12s: %s°C\n", map[order[i]], temps[order[i]]
    print "CPU2:"
    for (i=4; i<=6; i++) printf "  %-12s: %s°C\n", map[order[i]], temps[order[i]]
  }
'
EOF
chmod +x /usr/local/bin/memtemp.sh

echo "=== Creating systemp ==="
cat >/usr/local/bin/systemp <<'EOF'
#!/bin/bash
echo -e "\n==================== SYSTEM THERMAL STATUS ====================\n"
echo "=== CPU Temperatures ==="
/usr/local/bin/cputemp.sh
echo
echo "=== DIMM Temperatures & Memory Margins ==="
/usr/local/bin/memtemp.sh
echo -e "\n===============================================================\n"
EOF
chmod +x /usr/local/bin/systemp

echo "=== Adding aliases ==="
{
  echo "alias cputemp='/usr/local/bin/cputemp.sh'"
  echo "alias memtemp='/usr/local/bin/memtemp.sh'"
  echo "alias systemp='/usr/local/bin/systemp'"
} >> /root/.bashrc

echo "=== Setup complete! ==="
